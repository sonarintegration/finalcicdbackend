pipeline:
  identifier: Build_sonarintegration_finalcicdbackend_1738304685580
  name: Build finalcicdbackend
  orgIdentifier: default
  projectIdentifier: _Tier_GO
  properties:
    ci:
      codebase:
        build: <+input>
        connectorRef: account.Github
        repoName: sonarintegration/finalcicdbackend
  stages:
    - stage:
        identifier: build
        name: build
        spec:
          caching:
            enabled: true
          cloneCodebase: true
          execution:
            steps:
              - step:
                  identifier: gobuild
                  name: go_build
                  spec:
                    connectorRef: account.harnessImage
                    image: golang:1.22.1-alpine
                    shell: Sh
                    command: go build
                  timeout: ""
                  type: Run
              - step:
                  identifier: gotestcoverage
                  name: go_test_coverage
                  spec:
                    connectorRef: account.harnessImage
                    image: golang:1.22.1-alpine
                    shell: Sh
                    command: go test -coverprofile=coverage.out ./...
                  timeout: ""
                  type: Run
              - step:
                  identifier: gotestreport
                  name: go_test_report
                  spec:
                    connectorRef: account.harnessImage
                    image: golang:1.22.1-alpine
                    shell: Sh
                    command: "export GOBIN=/home/harness/go/bin\n\t\texport PATH=/home/harness/go/bin:$PATH\n\t\techo $PATH\n\t\tgo install github.com/jstemmer/go-junit-report/v2@latest\n\t\tgo test -v 2>&1 ./... | go-junit-report -set-exit-code > report.xml"
                    reports:
                      type: JUnit
                      spec:
                        paths:
                          - /harness/report.xml
                  timeout: ""
                  type: Run
              - step:
                  type: Sonarqube
                  name: Sonarqube_1
                  identifier: Sonarqube_1
                  spec:
                    mode: orchestration
                    config: default
                    target:
                      type: repository
                      detection: auto
                    advanced:
                      log:
                        level: info
                    auth:
                      access_token: 5ca7a9d7c023ff2d022e32d71f7b6cb1e97c8f1a
                      domain: https://sonarcloud.io/
                      ssl: false
                    tool:
                      project_key: sonarintegration-1_finalcicdbackend
          platform:
            os: Linux
            arch: Amd64
          runtime:
            type: Cloud
            spec: {}
        type: CI
